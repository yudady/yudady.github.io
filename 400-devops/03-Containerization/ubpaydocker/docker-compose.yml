version: "3.7"
services:

  mysql8027:
    container_name: "mysql_8_0_27"        # 指定容器的名称
    image: "mysql:8.0.27"              # 指定镜像和版本
    ports:
      - 3306:3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_ROOT_HOST: "%"
      # 注册新用户
      MYSQL_USER: tommy
      MYSQL_PASSWORD: "tommy"
    volumes:
      - "./data/mysql:/var/lib/mysql"  # 挂载数据目录
    command:
      - --lower_case_table_names=1                             # 忽略大小写
      - --default-authentication-plugin=mysql_native_password  # 使用本地存储密码
      - --default-time-zone=-00:00
    security_opt:
      - seccomp:unconfined

  redis622:
    container_name: redis_6_2_2
    image: redis:6.2.2
    privileged: true  # 启动特权模式
    sysctls:
      net.core.somaxconn: 10240
      net.ipv4.tcp_syncookies: 0
    ports:
      - 6379:6379
    restart: always
    volumes:
      - ./conf/redis.conf:/etc/redis.conf
      - ./data/redis:/data
    command: # 多个命令同时执行
      - /bin/bash
      - -c
      - |
        echo 551 > /proc/sys/net/core/somaxconn
        sysctl vm.overcommit_memory=1
        redis-server /etc/redis.conf --appendonly yes
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8gb

  zookeeper:
    image: zookeeper:3.4.10
    container_name: zookeeper
    restart: always
    ports:
      - 2181:2181


  kafka:
    image: wurstmeister/kafka:2.12-2.4.1
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    restart: always



